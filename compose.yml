services:
  web:
    container_name: mylibsqladmin-web
    build:
      context: ./admin
      dockerfile: Dockerfile
      args:
        APP_ENV: development
        ENV_FILE: .env.local # Use the development env file
    ports:
      - "8000:8000" # Laravel
      - "9003:9003" # Xdebug
      - "5173:5173" # Vite
    volumes:
      - ./admin:/var/www/html
      - ./admin/storage:/var/www/html/storage
    env_file: ".env" # Root env file (can hold overrides for dev)
    depends_on:
      db:
        condition: service_started
    networks:
      - app-network
    restart: always
    profiles: ["development"]

  web_prod:
    container_name: mylibsqladmin-web
    build:
      context: ./admin
      dockerfile: Dockerfile
      args:
        APP_ENV: production
        ENV_FILE: ./admin/.env.production # Use the production env file
    ports:
      - "8000:8000"
    volumes:
      - ./admin/database:/var/www/html/database
    env_file: "./admin/.env.production"
    depends_on:
      db:
        condition: service_started
    networks:
      - app-network
    restart: always
    profiles: ["production"]

  bridge:
    container_name: mylibsqladmin-bridge
    build:
      context: ./bridge
      dockerfile: Dockerfile
    ports:
      - "4500:4500"
    volumes:
      - ./bridge:/app
    env_file: "./.env"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4500/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    depends_on:
      db:
        condition: service_started
    restart: always
    networks:
      - app-network

  db:
    container_name: mylibsqladmin-db
    image: ghcr.io/tursodatabase/libsql-server:latest
    platform: linux/amd64
    entrypoint: ["/bin/sqld"]
    command:
      - "--http-listen-addr"
      - "0.0.0.0:8080"
      - "--grpc-listen-addr"
      - "0.0.0.0:5001"
      - "--admin-listen-addr"
      - "0.0.0.0:8081"
      - "--enable-namespaces"
      - "--no-welcome"
    user: "1000:1000"
    volumes:
      - ./bridge/data/libsql:/var/lib/sqld
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "8080:8080"
      - "5001:5001"
      - "8081:8081"
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
